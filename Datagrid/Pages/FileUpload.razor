@page "/fileupload"
@using Microsoft.Extensions.Logging
@inject ILogger<File> Logger
@inject IMatDialogService MatDialogService

<PageTitle>File Upload</PageTitle>
<h3>File Upload</h3>
<div class="container">
    <MatTable Items="@fs.GetFiles()">
        <MatTableHeader>
            <th>Image</th>
            <th>Name</th>
            <th>Type</th>
            <th>Size</th>
        </MatTableHeader>
        <MatTableRow>
            <td>
                <MatButton OnClick="OpenDialog">
                    <img src="@context.Base64Data" class="img-thumbnail" />
                </MatButton>
            </td>
            <td>@context.Name</td>
            <td>@context.Type</td>
            <td>@context.Size</td>
        </MatTableRow>
    </MatTable>
</div>
<p>
    <label>
        Upload:
        <InputFile OnChange="@LoadFile" />
    </label>
</p>
<div>
</div>

@*Dialogbox which shows a bigger image and gives you the option to change the name of the image*@
@*I couldn't figure out how to get the image and name that you clicked on so it just takes whatever's first on the list*@
<MatDialog @bind-IsOpen="@dialogIsOpen">
    <MatDialogContent>
        <img src="@fs.GetFiles()[0].Base64Data" />
        <div>
            <label>Name: </label>
            <MatTextField @bind-Value="@temporaryName" PlaceHolder="@fs.GetFiles()[0].Name"></MatTextField>
        </div>

    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@CloseDialog">Close</MatButton>
        <MatButton OnClick="ChangeName">Change Name</MatButton>
    </MatDialogActions>
</MatDialog>

@if (isLoading)
{
    <p>Uploading...</p>
}
@code {
    @* I have a FileStorage attribute that I use when I need to get the files from the list or when I need to add to the list*@
    private FileStorage fs = new FileStorage();

    private bool isLoading;
    private int maxAllowedFiles = 1;
    string base64Data = "";

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        isLoading = true;
        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            try
            {
                //resize the image and create the thumbnail

                var resizedFile = await file.RequestImageFileAsync(file.ContentType, 640, 480);

                var buffer = new byte[resizedFile.Size];

                using (var stream = resizedFile.OpenReadStream())
                {
                    await stream.ReadAsync(buffer);
                }
                base64Data = "data:image/png;base64," + Convert.ToBase64String(buffer);
                File newFile = new File(file.Name, Path.GetExtension(file.Name), file.ContentType, file.Size, base64Data);
                // Adds file to the list of files that I have in FileStorage.cs
                fs.AddFile(newFile);
            }
            catch (Exception ex)
            {
                Logger.LogError("File: {Filename} Error: {Error}",
                    file.Name, ex.Message);
            }
        }

        isLoading = false;
    }

    @*I added a variable to hold user input without changing the name of the picture
      That way the name will not be changed if the user closes thge dialog box *@
    bool dialogIsOpen = false;
    string temporaryName = "";
    private void OpenDialog()
    {
        dialogIsOpen = true;
    }
    private void CloseDialog(){
        temporaryName = "";
        dialogIsOpen = false;
    }

    private void ChangeName()
    {
        fs.ChangeName(fs.GetFiles()[0], temporaryName);
        temporaryName = "";
        dialogIsOpen = false;
    }
}
